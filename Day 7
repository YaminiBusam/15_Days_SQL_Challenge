Multiday Customer Count
Question:
Identify how many customers were upsold meaning they came back and made purchases on more than one day. Multiple purchases on the same day don’t count. We’re only interested in those who returned on another day to buy again.
Solution:
CREATE TABLE transactions2 (
id INTEGER PRIMARY KEY,
user_id INTEGER,
created_at DATETIME,
product_id INTEGER,
quantity INTEGER
);

INSERT INTO transactions2 (id, user_id, created_at, product_id, quantity) VALUES
(1, 101, '2024-01-01 10:00:00', 1, 1),  
(2, 101, '2024-01-01 14:00:00', 2, 1),
(3, 101, '2024-01-15 09:00:00', 3, 1), 
(4, 102, '2024-01-05 11:00:00', 1, 2),
(5, 102, '2024-01-05 11:30:00', 2, 1),
(6, 103, '2024-01-02 15:00:00', 1, 1),
(7, 104, '2024-01-01 09:00:00', 1, 1),
(8, 104, '2024-01-02 10:00:00', 2, 1),
(9, 104, '2024-01-03 11:00:00', 3, 1);


select * , row_number() over(partition  by user_id  order by user_id) as row_num
from transactions2

create view v2 as
select user_id,  day(created_at) day_created
from transactions2 
group by user_id, created_at
create view v3 as
with CD as
(
select distinct * from v2 
)
select count(user_id) as cnt, user_id from CD group by user_id 

select count(user_id)as upsold_customer_count
from v3
where cnt>1
Impact:
Identifying upsold customers reveals your most engaged users who are potential brand loyalists, enabling targeted loyalty rewards and optimization of return-triggering touchpoints through timing and messaging analysis.
